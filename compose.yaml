version: "3.8"

services:
  postgres:
    image: postgres:16.8
    container_name: ff-postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: feature_flag
    ports:
      - "5432:5432"
    volumes:
      - ${COMPOSE_PROJECT_DIR}/.compose/postgres:/var/lib/postgresql/data

  redis:
    image: redis:7.4.2
    container_name: ff-redis
    restart: always
    command: >
      redis-server
        --appendonly yes
        --appendfsync always
        --save 60 1000
        --dir /data
    ports:
      - "6379:6379"
    volumes:
      - ${COMPOSE_PROJECT_DIR}/.compose/redis:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.9.0
    container_name: ff-zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - ${COMPOSE_PROJECT_DIR}/.compose/zookeeper:/var/lib/zookeeper/data

  kafka:
    image: confluentinc/cp-kafka:7.9.0
    container_name: ff-kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ff-zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 24
      KAFKA_MESSAGE_MAX_BYTES: 10485760
      KAFKA_REPLICA_FETCH_MAX_BYTES: 10485760
      KAFKA_CREATE_TOPICS: |
        feature-flags
    volumes:
      - ${COMPOSE_PROJECT_DIR}/.compose/kafka:/var/lib/kafka/data
